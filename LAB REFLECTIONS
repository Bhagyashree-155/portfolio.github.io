<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Towers of Brahma - Time Complexity Analysis</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <header>
        <h1>Towers of Brahma</h1>
        <p>Time Complexity Analysis of the Recursive Solution</p>
    </header>

    <main>
        <section class="intro">
            <h2>Introduction</h2>
            <p>The Towers of Brahma is a classic puzzle that involves moving disks between three pegs. This program calculates the time taken to solve the problem recursively. The time complexity of the recursive solution is O(2^n), where 'n' is the number of disks.</p>
        </section>

        <section class="input-output">
            <h2>Input and Output</h2>
            <p>The user inputs the number of disks, and the program outputs the steps to move the disks from one peg to another. It also measures the time taken for execution and displays it on the screen.</p>
            <h3>Example Output</h3>
            <pre>
Move disc 1 from A to C
Move disc 2 from A to B
Move disc 1 from C to B
Move disc 3 from A to C
Move disc 1 from B to A
Move disc 2 from B to C
Move disc 1 from A to C
            </pre>
        </section>

        <section class="graph">
            <h2>Time Complexity Graph</h2>
            <p>The graph below shows the relationship between the number of disks and the time taken for execution. You can plot your own data in a spreadsheet based on the input size.</p>
            <img src="your-graph-image.png" alt="Time Complexity Graph" />
        </section>
        
        <section class="code">
            <h2>Program Code</h2>
            <pre>
#include &lt;iostream&gt;
#include &lt;ctime&gt;

using namespace std;

void towers(int n, string from, string to, string aux) {
    if (n == 1) {
        cout &lt;&lt; "Move disc 1 from " &lt;&lt; from &lt;&lt; " to " &lt;&lt; to &lt;&lt; endl;
        return;
    }
    towers(n-1, from, aux, to);
    cout &lt;&lt; "Move disc " &lt;&lt; n &lt;&lt; " from " &lt;&lt; from &lt;&lt; " to " &lt;&lt; to &lt;&lt; endl;
    towers(n-1, aux, to, from);
}

int main() {
    int n;
    string A = "A", B = "B", C = "C";
    cin &gt;&gt; n;

    // Start measuring time
    clock_t start = clock();

    towers(n, A, C, B);

    // Stop measuring time
    clock_t end = clock();
    double elapsed = double(end - start) / CLOCKS_PER_SEC;

    cout &lt;&lt; "Time taken for execution: " &lt;&lt; elapsed &lt;&lt; " seconds" &lt;&lt; endl;

    return 0;
}
            </pre>
        </section>
    </main>

    <footer>
        <p>&copy; 2025 Your Name | GitHub Repository: <a href="https://github.com/your-github-repo" target="_blank">Towers of Brahma Time Complexity Analysis</a></p>
    </footer>
</body>
</html>
